generator client {
  provider = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  uid         String   @unique
  name        String
  email       String
  dateCreated DateTime
}

model Reminder {
  id          Int    @id @default(autoincrement())
  uid         String
  message     String
  cronString  String
  guildId     String
  channelId   String
  channelType String
}

model Playlist {
  id          Int      @id @default(autoincrement())
  userId      String
  guildId     String
  tracks      Json
  dateCreated DateTime
  name        String
  private     Boolean?

  @@unique([userId, name])
}

model Tag {
  id          Int      @id @default(autoincrement())
  userId      String
  guildId     String
  name        String
  dateCreated DateTime
  message     String
  isMedia     Boolean
  isGuild     Boolean
}

model JoinToCreateVC {
  id Int @id @default(autoincrement())
  guildId String @unique
  parentChannelId String

}

model EphemeralVC {
  id Int @id @default(autoincrement())
  guildId String
  channelId String
  
  @@unique([guildId, channelId])
}

model PlayerSession {
  guildId String @id
  sessionId String?
  resumeKey String?
}

model ReminderService {
  id String @id @default(uuid())
  name String
  cron String
  contents String
  contentType ContentType
  createdBy String
  createdAt DateTime
  updatedBy String?
  updatedAt DateTime?
  deleted Boolean @default(false)
  deletedBy String?
  deletedAt DateTime?
}

enum ContentType {
  TEXT
  MEDIA_IMAGE
  MEDIA_VIDEO
  MEDIA_FILE
}

model DiscordSlashCommandIdMapping {
  id String @id @default(uuid())
  botId String
  commandName String
  idHints String[]
}